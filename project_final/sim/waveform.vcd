$date
   Tue Mar 26 02:32:58 2024
$end
$version
  2021.2
$end
$timescale
  1ps
$end
$scope module rom2ram_tb $end
$var reg 1 ! clk $end
$var reg 1 " start $end
$var reg 1 # done $end
$var reg 1 $ reset $end
$var reg 1 % start_rom $end
$var reg 1 & start_dma $end
$var reg 16 ' data_amt [15:0] $end
$scope module rom2ram_dut $end
$var wire 1 ( clk $end
$var wire 1 ) reset $end
$var wire 1 * start $end
$var wire 1 + start_rom $end
$var wire 1 , start_dma $end
$var wire 16 - data_amt [15:0] $end
$var reg 1 # done $end
$var reg 1 . ram_wea $end
$var reg 4 / rom_address [3:0] $end
$var reg 8 0 rom_data [7:0] $end
$var reg 4 1 ram_address [3:0] $end
$var reg 8 2 ram_data [7:0] $end
$var reg 4 3 read_address [3:0] $end
$var reg 8 4 element_data [7:0] $end
$scope module rom_dut $end
$var wire 1 ( clk $end
$var wire 1 + start_rom $end
$var wire 4 5 rom_addr [3:0] $end
$var reg 8 0 rom_data [7:0] $end
$upscope $end
$scope module dma_dut $end
$var wire 1 ( clk $end
$var wire 1 ) reset $end
$var wire 1 , start_dma $end
$var wire 16 - data_amt [15:0] $end
$var wire 8 6 rom_data [7:0] $end
$var wire 4 7 rom_addr [3:0] $end
$var reg 4 1 ram_addr [3:0] $end
$var reg 8 2 ram_data [7:0] $end
$var reg 1 # done $end
$var reg 1 . ram_wea $end
$var reg 4 8 current_element [3:0] $end
$upscope $end
$scope module simple_dualport_mem $end
$var wire 1 ( clk $end
$var wire 4 9 addra [3:0] $end
$var wire 8 : dina [7:0] $end
$var wire 1 ; wea $end
$var wire 4 < addrb [3:0] $end
$var reg 8 4 doutb [7:0] $end
$upscope $end
$scope begin Block81_6 $end
$var reg 32 = i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
x#
0$
x%
x&
b10000 '
0(
0)
0*
x+
x,
b10000 -
x.
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
b0 8
bx 9
bx :
x;
bx <
b0 =
$end
#5000
1!
1(
b0 /
b0 0
bx 4
b0 5
b0 6
b0 7
#10000
0!
1"
1%
1&
0(
1*
1+
1,
#15000
1!
1(
1.
b1 /
b0 0
b0 1
b0 2
bx 3
bx 4
b1 5
b1 7
b1 8
b0 9
b0 :
1;
#20000
0!
0(
#25000
1!
1(
1.
b10 /
b1 0
b1 1
b0 2
bx 3
bx 4
b10 5
b1 6
b10 7
b10 8
b1 9
#30000
0!
0(
#35000
1!
1(
1.
b11 /
b10 0
b10 1
b1 2
bx 3
bx 4
b11 5
b10 6
b11 7
b11 8
b10 9
b1 :
#40000
0!
0(
#45000
1!
1(
1.
b100 /
b11 0
b11 1
b10 2
bx 3
bx 4
b100 5
b11 6
b100 7
b100 8
b11 9
b10 :
#50000
0!
0(
#55000
1!
1(
1.
b101 /
b100 0
b100 1
b11 2
bx 3
bx 4
b101 5
b100 6
b101 7
b101 8
b100 9
b11 :
#60000
0!
0(
#65000
1!
1(
1.
b110 /
b101 0
b101 1
b100 2
bx 3
bx 4
b110 5
b101 6
b110 7
b110 8
b101 9
b100 :
#70000
0!
0(
#75000
1!
1(
1.
b111 /
b110 0
b110 1
b101 2
bx 3
bx 4
b111 5
b110 6
b111 7
b111 8
b110 9
b101 :
#80000
0!
0(
#85000
1!
1(
1.
b1000 /
b111 0
b111 1
b110 2
bx 3
bx 4
b1000 5
b111 6
b1000 7
b1000 8
b111 9
b110 :
#90000
0!
0(
#95000
1!
1(
1.
b1001 /
b1000 0
b1000 1
b111 2
bx 3
bx 4
b1001 5
b1000 6
b1001 7
b1001 8
b1000 9
b111 :
#100000
0!
0(
#105000
1!
1(
1.
b1010 /
b1001 0
b1001 1
b1000 2
bx 3
bx 4
b1010 5
b1001 6
b1010 7
b1010 8
b1001 9
b1000 :
